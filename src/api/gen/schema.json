{
  "openapi": "3.0.3",
  "info": {
    "title": "Jean Test API",
    "description": "validate me with https://editor.swagger.io/",
    "contact": {
      "email": "thierry@pennylane.tech"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "JeanTestAPI"
    }
  ],
  "servers": [
    {
      "url": "https://jean-test-api.herokuapp.com"
    }
  ],
  "paths": {
    "/products/search": {
      "get": {
        "operationId": "getSearchProducts",
        "summary": "Search products",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the matching products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  },
                  "required": [
                    "pagination",
                    "products"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/customers/search": {
      "get": {
        "operationId": "getSearchCustomers",
        "summary": "Search customers",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the matching customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "customers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    }
                  },
                  "required": [
                    "pagination",
                    "customers"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "operationId": "getInvoices",
        "summary": "list invoices",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter",
            "description": "Filter object for tables (click \"Try it out\" to view an example)",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "[{\"field\":\"customer_id\",\"operator\":\"eq\",\"value\":5}]"
          }
        ],
        "responses": {
          "200": {
            "description": "the matching invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "invoices": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "$ref": "#/components/schemas/Invoice"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "customer": {
                                "type": "object",
                                "$ref": "#/components/schemas/Customer"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "pagination",
                    "invoices"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postInvoices",
        "summary": "create an invoice",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice": {
                    "$ref": "#/components/schemas/InvoiceCreatePayload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "put": {
        "operationId": "putInvoice",
        "summary": "update an invoice",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice": {
                    "$ref": "#/components/schemas/InvoiceUpdatePayload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the modified invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getInvoice",
        "summary": "get an invoice",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the matching invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteInvoice",
        "summary": "delete an invoice",
        "parameters": [
          {
            "name": "X-SESSION",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "(empty) invoice has been deleted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 2
          },
          "page_size": {
            "type": "number",
            "example": 25
          },
          "total_pages": {
            "type": "number",
            "example": 2
          },
          "total_entries": {
            "type": "number",
            "example": 30
          }
        },
        "required": [
          "page",
          "page_size",
          "total_pages",
          "total_entries"
        ]
      },
      "unit": {
        "type": "string",
        "enum": [
          "hour",
          "day",
          "piece"
        ]
      },
      "vat_rate": {
        "type": "string",
        "enum": [
          "0",
          "5.5",
          "10",
          "20"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 67
          },
          "label": {
            "type": "string",
            "example": "Tesla Model S"
          },
          "vat_rate": {
            "$ref": "#/components/schemas/vat_rate"
          },
          "unit": {
            "$ref": "#/components/schemas/unit"
          },
          "unit_price": {
            "type": "string",
            "example": 1980
          },
          "unit_price_without_tax": {
            "type": "string",
            "example": 1800
          },
          "unit_tax": {
            "type": "string",
            "example": 180
          }
        },
        "required": [
          "id",
          "label",
          "unit",
          "unit_price",
          "unit_price_without_tax",
          "unit_tax",
          "vat_rate"
        ]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 6773
          },
          "first_name": {
            "type": "string",
            "example": "Jean"
          },
          "last_name": {
            "type": "string",
            "example": "Dupont"
          },
          "address": {
            "type": "string",
            "example": "9 impasse Sauvey"
          },
          "zip_code": {
            "type": "string",
            "example": "50100"
          },
          "city": {
            "type": "string",
            "example": "Cherbourg"
          },
          "country": {
            "type": "string",
            "example": "France"
          },
          "country_code": {
            "type": "string",
            "example": "FR"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "address",
          "zip_code",
          "city",
          "country",
          "country_code"
        ]
      },
      "InvoiceLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 9181
          },
          "invoice_id": {
            "type": "number",
            "example": 5785
          },
          "product_id": {
            "type": "number",
            "example": 67
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "label": {
            "type": "string",
            "example": "Tesla Model S with Pennylane logo"
          },
          "unit": {
            "$ref": "#/components/schemas/unit"
          },
          "vat_rate": {
            "$ref": "#/components/schemas/vat_rate"
          },
          "price": {
            "type": "string",
            "example": "1s20.00"
          },
          "tax": {
            "type": "string",
            "example": "20.00"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "id",
          "invoice_id",
          "product_id",
          "quantity",
          "label",
          "unit",
          "vat_rate",
          "price",
          "tax",
          "product"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 5785
          },
          "customer_id": {
            "type": "number",
            "example": 6773,
            "nullable": true
          },
          "finalized": {
            "type": "boolean",
            "example": false
          },
          "paid": {
            "type": "boolean",
            "example": true
          },
          "date": {
            "type": "string",
            "example": "2021-02-03",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "example": "2021-03-05",
            "nullable": true
          },
          "total": {
            "type": "string",
            "example": "120.00",
            "nullable": true
          },
          "tax": {
            "type": "string",
            "example": "20.00",
            "nullable": true
          },
          "invoice_lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLine"
            }
          }
        },
        "required": [
          "id",
          "customer_id",
          "finalized",
          "paid",
          "date",
          "deadline",
          "total",
          "tax",
          "invoice_lines"
        ]
      },
      "InvoiceLineUpdatePayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 45,
            "description": "If this parameter is set, the identified invoice_line will be updated (or deleted if _destroy is set to true) If this parameter is not set, a new invoice_line will be created\n"
          },
          "_destroy": {
            "type": "boolean",
            "example": false,
            "description": "If this parameter is set to true, and if \"id\" is set, the identified invoice_line will be deleted\n"
          },
          "product_id": {
            "type": "number",
            "example": 67
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "label": {
            "type": "string",
            "example": "Tesla Model S with Pennylane logo"
          },
          "unit": {
            "$ref": "#/components/schemas/unit"
          },
          "vat_rate": {
            "$ref": "#/components/schemas/vat_rate"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "120.00"
          },
          "tax": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "20.00"
          }
        }
      },
      "InvoiceLineCreatePayload": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 67
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "label": {
            "type": "string",
            "example": "Tesla Model S with Pennylane logo"
          },
          "unit": {
            "$ref": "#/components/schemas/unit"
          },
          "vat_rate": {
            "$ref": "#/components/schemas/vat_rate"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "120.00"
          },
          "tax": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "20.00"
          }
        },
        "required": [
          "product_id"
        ]
      },
      "InvoiceUpdatePayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 6757
          },
          "customer_id": {
            "type": "number",
            "example": 6773
          },
          "finalized": {
            "type": "boolean",
            "example": false
          },
          "paid": {
            "type": "boolean",
            "example": true
          },
          "date": {
            "type": "string",
            "example": "2021-02-03",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "example": "2021-03-05",
            "nullable": true
          },
          "invoice_lines_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineUpdatePayload"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "InvoiceCreatePayload": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "number",
            "example": 6773
          },
          "finalized": {
            "type": "boolean",
            "example": false
          },
          "paid": {
            "type": "boolean",
            "example": true
          },
          "date": {
            "type": "string",
            "example": "2021-02-03",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "example": "2021-03-05",
            "nullable": true
          },
          "invoice_lines_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineCreatePayload"
            }
          }
        },
        "required": [
          "customer_id"
        ]
      }
    }
  }
}